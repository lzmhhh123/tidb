[
  {
    "Name": "TestIndexJoinHavingExprInInnerJoinKeys",
    "Cases": [
      {
        "SQL": "select /*+ inl_join(t1, t2) */ * from t1 join t2 on t1.v_float = t2.v_int",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─IndexJoin_11 12500.00 root inner join, inner:Projection_10, outer key:test.t1.v_float, inner key:test.t2.v_int",
          "  ├─TableReader_15 10000.00 root data:TableScan_14",
          "  │ └─TableScan_14 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─Projection_10 1.25 root test.t2.v_int, test.t2.v_float, test.t2.v_decimal, cast(test.t2.v_int)->Column#9",
          "    └─IndexLookUp_9 1.25 root ",
          "      ├─IndexScan_7 1.25 cop[tikv] table:t2, index:v_int, range: decided by [eq(test.t2.v_int, test.t1.v_float)], keep order:false, stats:pseudo",
          "      └─TableScan_8 1.25 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 -1 -1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000"
        ]
      },
      {
        "SQL": "select /*+ hash_join(t1, t2) */ * from t1 join t2 on t1.v_float = t2.v_int",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─HashLeftJoin_14 12500.00 root inner join, inner:Projection_18, equal:[eq(test.t1.v_float, Column#9)]",
          "  ├─TableReader_17 10000.00 root data:TableScan_16",
          "  │ └─TableScan_16 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─Projection_18 10000.00 root test.t2.v_int, test.t2.v_float, test.t2.v_decimal, cast(test.t2.v_int)->Column#9",
          "    └─TableReader_20 10000.00 root data:TableScan_19",
          "      └─TableScan_19 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 -1 -1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000"
        ]
      },
      {
        "SQL": "select /*+ inl_join(t1, t2) */ * from t1 join t2 on t1.v_decimal = t2.v_int",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─IndexJoin_11 12500.00 root inner join, inner:Projection_10, outer key:test.t1.v_decimal, inner key:test.t2.v_int",
          "  ├─TableReader_15 10000.00 root data:TableScan_14",
          "  │ └─TableScan_14 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─Projection_10 1.25 root test.t2.v_int, test.t2.v_float, test.t2.v_decimal, cast(test.t2.v_int)->Column#9",
          "    └─IndexLookUp_9 1.25 root ",
          "      ├─IndexScan_7 1.25 cop[tikv] table:t2, index:v_int, range: decided by [eq(test.t2.v_int, test.t1.v_decimal)], keep order:false, stats:pseudo",
          "      └─TableScan_8 1.25 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 1 1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000"
        ]
      },
      {
        "SQL": "select /*+ hash_join(t1, t2) */ * from t1 join t2 on t1.v_decimal = t2.v_int",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─HashLeftJoin_14 12500.00 root inner join, inner:Projection_18, equal:[eq(test.t1.v_decimal, Column#9)]",
          "  ├─TableReader_17 10000.00 root data:TableScan_16",
          "  │ └─TableScan_16 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─Projection_18 10000.00 root test.t2.v_int, test.t2.v_float, test.t2.v_decimal, cast(test.t2.v_int)->Column#9",
          "    └─TableReader_20 10000.00 root data:TableScan_19",
          "      └─TableScan_19 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 1 1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000"
        ]
      },
      {
        "SQL": "select /*+ inl_join(t1, t2) */ * from t1 join t2 on t1.v_int = t2.v_float",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─IndexJoin_10 12500.00 root inner join, inner:IndexLookUp_9, outer key:Column#9, inner key:test.t2.v_float",
          "  ├─Projection_19 10000.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, cast(test.t1.v_int)->Column#9",
          "  │ └─TableReader_21 10000.00 root data:TableScan_20",
          "  │   └─TableScan_20 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─IndexLookUp_9 1.25 root ",
          "    ├─IndexScan_7 1.25 cop[tikv] table:t2, index:v_float, range: decided by [eq(test.t2.v_float, Column#9)], keep order:false, stats:pseudo",
          "    └─TableScan_8 1.25 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 -1 -1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      },
      {
        "SQL": "select /*+ hash_join(t1, t2) */ * from t1 join t2 on t1.v_int = t2.v_float",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─HashLeftJoin_19 12500.00 root inner join, inner:TableReader_25, equal:[eq(Column#9, test.t2.v_float)]",
          "  ├─Projection_21 10000.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, cast(test.t1.v_int)->Column#9",
          "  │ └─TableReader_23 10000.00 root data:TableScan_22",
          "  │   └─TableScan_22 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─TableReader_25 10000.00 root data:TableScan_24",
          "    └─TableScan_24 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 -1 -1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      },
      {
        "SQL": "select /*+ inl_join(t1, t2) */ * from t1 join t2 on t1.v_decimal = t2.v_float",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─IndexJoin_10 12500.00 root inner join, inner:IndexLookUp_9, outer key:Column#9, inner key:test.t2.v_float",
          "  ├─Projection_19 10000.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, cast(test.t1.v_decimal)->Column#9",
          "  │ └─TableReader_21 10000.00 root data:TableScan_20",
          "  │   └─TableScan_20 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─IndexLookUp_9 1.25 root ",
          "    ├─IndexScan_7 1.25 cop[tikv] table:t2, index:v_float, range: decided by [eq(test.t2.v_float, Column#9)], keep order:false, stats:pseudo",
          "    └─TableScan_8 1.25 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 1 1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      },
      {
        "SQL": "select /*+ hash_join(t1, t2) */ * from t1 join t2 on t1.v_decimal = t2.v_float",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─HashLeftJoin_19 12500.00 root inner join, inner:TableReader_25, equal:[eq(Column#9, test.t2.v_float)]",
          "  ├─Projection_21 10000.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, cast(test.t1.v_decimal)->Column#9",
          "  │ └─TableReader_23 10000.00 root data:TableScan_22",
          "  │   └─TableScan_22 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─TableReader_25 10000.00 root data:TableScan_24",
          "    └─TableScan_24 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-1 -1 1.0000000000 1 1 1.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      },
      {
        "SQL": "select /*+ inl_join(t1, t2) */ * from t1 join t2 on t1.v_float = t2.v_decimal",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─IndexJoin_11 12500.00 root inner join, inner:Projection_10, outer key:test.t1.v_float, inner key:test.t2.v_decimal",
          "  ├─TableReader_15 10000.00 root data:TableScan_14",
          "  │ └─TableScan_14 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─Projection_10 1.25 root test.t2.v_int, test.t2.v_float, test.t2.v_decimal, cast(test.t2.v_decimal)->Column#9",
          "    └─IndexLookUp_9 1.25 root ",
          "      ├─IndexScan_7 1.25 cop[tikv] table:t2, index:v_decimal, range: decided by [eq(test.t2.v_decimal, test.t1.v_float)], keep order:false, stats:pseudo",
          "      └─TableScan_8 1.25 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "1 1 1.0000000000 -1 -1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000"
        ]
      },
      {
        "SQL": "select /*+ hash_join(t1, t2) */ * from t1 join t2 on t1.v_float = t2.v_decimal",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─HashLeftJoin_14 12500.00 root inner join, inner:Projection_18, equal:[eq(test.t1.v_float, Column#9)]",
          "  ├─TableReader_17 10000.00 root data:TableScan_16",
          "  │ └─TableScan_16 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─Projection_18 10000.00 root test.t2.v_int, test.t2.v_float, test.t2.v_decimal, cast(test.t2.v_decimal)->Column#9",
          "    └─TableReader_20 10000.00 root data:TableScan_19",
          "      └─TableScan_19 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "1 1 1.0000000000 -1 -1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      },
      {
        "SQL": "select /*+ inl_join(t1, t2) */ * from t1 join t2 on t1.v_int = t2.v_decimal",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─IndexJoin_10 12500.00 root inner join, inner:IndexLookUp_9, outer key:Column#9, inner key:test.t2.v_decimal",
          "  ├─Projection_19 10000.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, cast(test.t1.v_int)->Column#9",
          "  │ └─TableReader_21 10000.00 root data:TableScan_20",
          "  │   └─TableScan_20 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─IndexLookUp_9 1.25 root ",
          "    ├─IndexScan_7 1.25 cop[tikv] table:t2, index:v_decimal, range: decided by [eq(test.t2.v_decimal, Column#9)], keep order:false, stats:pseudo",
          "    └─TableScan_8 1.25 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "1 1 1.0000000000 -1 -1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      },
      {
        "SQL": "select /*+ hash_join(t1, t2) */ * from t1 join t2 on t1.v_int = t2.v_decimal",
        "Explain": [
          "Projection_6 12500.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, test.t2.v_int, test.t2.v_float, test.t2.v_decimal",
          "└─HashLeftJoin_19 12500.00 root inner join, inner:TableReader_25, equal:[eq(Column#9, test.t2.v_decimal)]",
          "  ├─Projection_21 10000.00 root test.t1.v_int, test.t1.v_float, test.t1.v_decimal, cast(test.t1.v_int)->Column#9",
          "  │ └─TableReader_23 10000.00 root data:TableScan_22",
          "  │   └─TableScan_22 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─TableReader_25 10000.00 root data:TableScan_24",
          "    └─TableScan_24 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1.0000000000 1 1 1.0000000000",
          "1 1 1.0000000000 -1 -1 1.0000000000",
          "2 2 2.0000000000 2 2 2.0000000000",
          "-2 -2 -2.0000000000 -2 -2 -2.0000000000",
          "9223372036854775807 9223372000000000000 9223372036854775807.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000",
          "9223372036854775807 12000000000000000000000000 12000000000000000000000000.0000000000 9223372036854775807 9223372000000000000 9223372036854775807.0000000000"
        ]
      }
    ]
  }
]
